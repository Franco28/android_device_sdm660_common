<?xml version="1.0" encoding="utf-8"?>
<!--
#
# Copyright (C) 2018 The Xiaomi-SDM660 Project (DU)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#
# This file sets variables that control the way modules are built
# thorughout the system. It should not be used to conditionally
# disable makefiles (the proper mechanism to control what gets
# included in a build is to use PRODUCT_PACKAGES in a product
# definition file).
#
-->

<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">

    <!-- Allow automatic adjusting of the screen brightness while dozing in low power state. -->
    <bool name="config_allowAutoBrightnessWhileDozing">true</bool>

    <!-- IP address of the dns server to use if nobody else suggests one -->
    <string name="config_default_dns_server" translatable="false">1.0.0.1</string>

    <!-- The duration (in milliseconds) of a short animation. -->
    <integer name="config_shortAnimTime">100</integer>

    <!-- The duration (in milliseconds) of a medium-length animation. -->
    <integer name="config_mediumAnimTime">200</integer>

    <!-- The duration (in milliseconds) of a long animation. -->
    <integer name="config_longAnimTime">250</integer>

    <!-- The duration (in milliseconds) of the activity open/close and fragment open/close animations. -->
    <integer name="config_activityShortDur">75</integer>
    <integer name="config_activityDefaultDur">110</integer>

	<!-- Operating volatage for bluetooth controller. 0 by default-->
	<integer translatable="false" name="config_bluetooth_operating_voltage_mv">3300</integer>

	<!-- The duration (in milliseconds) for the outgoing sms authorization request to timeout.-->
	<integer name="config_sms_authorization_timeout_ms">15000</integer>

	<!-- Enable SMS authorization support -->
	<bool name="config_sms_authorization_enabled">true</bool>

	<!-- Set to true to add links to Cell Broadcast app from Settings and MMS app. -->
	<bool name="config_cellBroadcastAppLinks">true</bool>

	<!-- Is the battery LED intrusive? Used to decide if there should be a disable option -->
	<bool name="config_intrusiveBatteryLed">true</bool>

	<!-- Default value for led color when battery is low on charge -->
	<integer name="config_notificationsBatteryLowARGB">0xFFFF0000</integer>

	<!-- Default value for led color when battery is medium charged -->
	<integer name="config_notificationsBatteryMediumARGB">0xFFFF0000</integer>

	<!-- Default value for led color when battery is fully charged -->
	<integer name="config_notificationsBatteryFullARGB">0xFFFF0000</integer>
	
	<!-- Does the notification LED support multiple colors? Used to decide if the user can change the colors --> 
	<bool name="config_multiColorNotificationLed">false</bool>
	
	<!-- Default color for notification LED. --> 
	<color name="config_defaultNotificationColor">#ffff0000</color>

	<!-- Is the notification LED intrusive? Used to decide if there should be a disable option -->
	<bool name="config_intrusiveNotificationLed">true</bool>
	
	<!-- Do the battery/notification LEDs support pulsing? Used to decide if we show pulse settings -->
	<bool name="config_ledCanPulse">true</bool> 

    <string-array name="config_locationProviderPackageNames" translatable="false">
        <!-- The Google provider -->
        <item>com.google.android.gms</item>
        <!-- The standard AOSP fused location provider -->
        <item>com.android.location.fused</item>
    </string-array>

    <!-- Boolean indicating whether the HWC setColorTransform function can be performed efficiently
         in hardware. -->
    <bool name="config_setColorTransformAccelerated">true</bool>

    <!-- Minimum color temperature, in Kelvin, supported by Night display. -->
    <integer name="config_nightDisplayColorTemperatureMin">1600</integer>

    <!-- Default color temperature, in Kelvin, to tint the screen when Night display is
         activated. -->
    <integer name="config_nightDisplayColorTemperatureDefault">2650</integer>

    <!-- Flag indicating whether we should enable smart battery. -->
    <bool name="config_smart_battery_available">true</bool>

    <!-- Disable stock OTA components if installed -->
    <string-array name="config_disabledComponents" translatable="false">
        <item>com.google.android.gsf/com.google.android.gsf.update.SystemUpdateActivity</item>
        <item>com.google.android.gsf/com.google.android.gsf.update.SystemUpdateService$Receiver</item>
        <item>com.google.android.gsf/com.google.android.gsf.update.SystemUpdateService$SecretCodeReceiver</item>
        <item>com.google.android.gms/com.google.android.gms.update.SystemUpdateActivity</item>
        <item>com.google.android.gms/com.google.android.gms.update.SystemUpdateService$Receiver</item>
        <item>com.google.android.gms/com.google.android.gms.update.SystemUpdateService$ActiveReceiver</item>
        <item>com.google.android.gms/com.google.android.gms.update.SystemUpdateService$SecretCodeReceiver</item>
    </string-array>

    <!-- Force enabling of some services that could have been previously disabled -->
    <string-array name="config_forceEnabledComponents" translatable="false">
        <item>com.google.android.gsf/com.google.android.gsf.update.SystemUpdateService</item>
        <item>com.google.android.gms/com.google.android.gms.update.SystemUpdateService</item>
    </string-array>

    <!-- Whether WiFi display is supported by this device.
         There are many prerequisites for this feature to work correctly.
         Here are a few of them:
         * The WiFi radio must support WiFi P2P.
         * The WiFi radio must support concurrent connections to the WiFi display and
           to an access point.
         * The Audio Flinger audio_policy.conf file must specify a rule for the "r_submix"
           remote submix module.  This module is used to record and stream system
           audio output to the WiFi display encoder in the media server.
         * The remote submix module "audio.r_submix.default" must be installed on the device.
         * The device must be provisioned with HDCP keys (for protected content).
    -->
    <bool name="config_enableWifiDisplay">true</bool>

	<!-- Array of ConnectivityManager.TYPE_xxxx values allowable for tethering -->
	<!-- Common options are [1, 4] for TYPE_WIFI and TYPE_MOBILE_DUN or
	<!== [0,1,5,7] for TYPE_MOBILE, TYPE_WIFI, TYPE_MOBILE_HIPRI and TYPE_BLUETOOTH -->
	<integer-array translatable="false" name="config_tether_upstream_types">
		<item>1</item>
		<item>0</item>
		<item>5</item>
		<item>7</item>
	</integer-array>

	<!-- Configure wifi tcp buffersizes in the form:
		 rmem_min,rmem_def,rmem_max,wmem_min,wmem_def,wmem_max -->
	<string name="config_wifi_tcp_buffers" translatable="false">524288,2097152,8388608,262144,524288,4194304</string>

    <!-- enable doze powersaving mode -->
    <bool name="config_enableAutoPowerModes">true</bool>

    <!-- Whether or not swipe up gesture's opt-in setting is available on this device -->
    <bool name="config_custom_swipe_up_gesture_setting_available">true</bool>

    <!-- The duration in which a recent task is considered in session and should be visible. -->
    <integer name="config_activeTaskDurationHours">12</integer>

	<!-- List of regexpressions describing the interface (if any) that represent tetherable
		 Wifi interfaces.  If the device doesn't want to support tethering over Wifi this
		 should be empty.  An example would be "softap.*" -->
	<string-array translatable="false" name="config_tether_wifi_regexs">
		<item>"wlan0"</item>
		<item>"wigig0"</item>
		<item>"softap0"</item>
	</string-array>

	<!-- List of regexpressions describing the interface (if any) that represent tetherable
		 bluetooth interfaces.  If the device doesn't want to support tethering over bluetooth this
		 should be empty. -->
	<string-array translatable="false" name="config_tether_bluetooth_regexs">
			<item>"bnep\\d"</item>
			<item>"bt-pan"</item>
	</string-array>


	<!-- This string array should be overridden by the device to present a list of radio
		 attributes.  This is used by the connectivity manager to decide which networks can coexist
		 based on the hardware -->
	<!-- An Array of "[ConnectivityManager connectionType],
					  [# simultaneous connection types]"  -->
	<string-array translatable="false" name="radioAttributes">
		<item>"1,1"</item>
		<item>"0,1"</item>
		<item>"7,1"</item>
		<item>"9,1"</item>
	</string-array>

	<!-- Wifi driver supports batched scan -->
	<bool translatable="false" name="config_wifi_batched_scan_supported">true</bool>

	<!-- Enable ACS (auto channel selection) for Wifi hotspot (SAP) -->
	<bool translatable="false" name="config_wifi_softap_acs_supported">true</bool>

	<!-- Enable 802.11ac for Wifi hotspot (SAP) -->
	<bool translatable="false" name="config_wifi_softap_ieee80211ac_supported">true</bool>

    <!-- Default SMS Application. This will be the default SMS application when
         the phone first boots. The user can then change the default app to one
         of their choosing.
         This can be overridden for devices where a different default SMS
         application is desired.

         If this string is empty or the specified package does not exist, then
         the platform will search for an SMS app and use that (if there is one)-->
    <string name="default_sms_application" translatable="false">com.google.android.apps.messaging</string>

    <!-- Component name for default assistant on this device -->
    <string name="config_defaultAssistantComponentName">com.google.android.googlequicksearchbox/com.google.android.voiceinteraction.GsaVoiceInteractionService</string>

</resources>
